{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/02-EffectHook-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { set } from 'express/lib/application';\nimport AuthContext from './store/auth-context';\nimport { AuthContextProvider } from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   setIsLoggedIn(true);\n  // };\n  // const logoutHandler = () => {\n  //   setIsLoggedIn(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: onLogout\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: onLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: onLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/02-EffectHook-project/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","set","AuthContext","AuthContextProvider","App","isLoggedIn","setIsLoggedIn","onLogout","onLogin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,GAAT,QAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,mBAAT,QAAoC,sBAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C,CADa,CAGb;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AAEA,sBACE,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAC1BS,MAAAA,UAAU,EAAEA,UADc;AAE1BE,MAAAA,QAAQ,EAAEA;AAFgB,KAA5B;AAAA,4BAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,iBACG,CAACF,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEG;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGH,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3BQH,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { set } from 'express/lib/application';\nimport AuthContext from './store/auth-context';\nimport { AuthContextProvider } from './store/auth-context';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n\n  //   setIsLoggedIn(false);\n  // };\n\n  return (\n    <AuthContextProvider value={{\n      isLoggedIn: isLoggedIn,\n      onLogout: onLogout\n    }}>\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={onLogin} />}\n        {isLoggedIn && <Home onLogout={onLogout} />}\n      </main>\n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}